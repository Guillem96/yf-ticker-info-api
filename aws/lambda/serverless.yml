service: ticker-info-api

provider:
  name: aws
  runtime: python3.9
  region: eu-west-2
  versionFunctions: false
  iam:
    role:
      name: "ticker-info-api-role"
      statements:
        - Effect: Allow
          Action:
            - s3:List*
            - s3:Get*
            - s3:PutObject
          Resource:
            - Fn::Sub: ${CacheS3Bucket.Arn}
            - Fn::Sub: ${CacheS3Bucket.Arn}/*

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
  accountId:
    Fn::Sub: "${AWS::AccountId}"

package:
  patterns:
    - ../../ticker_info/**
    - "!node_modules"

functions:
  tickerInfo:
    handler: handler.handler
    environment:
      CACHE_DIR:
        Fn::Sub: "s3://ticker-info-api-${AWS::Region}-${AWS::AccountId}-cache"
      CACHE_TTL: "3600" # 1 hour
    url: true
    timeout: 20
    layers:
      - Ref: PythonRequirementsLambdaLayer

resources:
  Resources:
    CacheS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName:
          Fn::Sub: ticker-info-api-${AWS::Region}-${AWS::AccountId}-cache
        LifecycleConfiguration:
          Rules:
            - Id: RemoveAllObjects
              Status: Enabled
              ExpirationInDays: 30
        AccessControl: Private
