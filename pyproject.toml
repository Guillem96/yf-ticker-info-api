[tool.poetry]
version = "0.1.0"
name = "ticker_info"
description = "Get basic information about a company"
readme = "README.md"
license = "MIT"
keywords = []
authors = ["Guillem Orellana Trullols <guillem.orellana@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = "*"
pydantic = "*"
pydantic-settings = "*"
yfinance = "^0.2.65"
urllib3 = "<2"          # workaround for botocore
s3pathlib = "^2.1.2"
httpx = "^0.28.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "*"
mypy = "*"
pytest = "^8.2.2"

[tool.poetry.group.lambda]
optional = true

[tool.poetry.group.lambda.dependencies]
mangum = "*"
lxml = "^5.3.0"
cryptography = "3.4.8"
bcrypt = "3.2.2"

[[tool.mypy.overrides]]
module = ["py.*", "s3pathlib.*"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 80

[tool.ruff.lint]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  "F401",
]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["ticker_info"]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
